generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
  relationMode = "prisma"
}

model Amenity {
  id String @id @default(uuid())
  name String

    properties Property[] @relation("PropertyAmenities")
}

model Booking {
  id String @id @default(uuid())
  userId String 
  propertyId String
  checkinDate DateTime
  checkoutDate DateTime
  numberOfGuests Int
  totalPrice Float
  bookingStatus String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  property Property @relation(fields: [propertyId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([userId])
  @@index([propertyId])
}

model Host {
  id String @id @default(uuid())
  username String @unique
  password String 
  name String
  email String 
  phoneNumber String
  profilePicture String
  aboutMe String
  properties Property[]

  @@index([username])
}

model Property {
  id String @id @default(uuid())
  title String
  description String
  location String
  pricePerNight Float
  bedroomCount Int
  bathRoomCount Int
  maxGuestCount Int
  hostId String
  rating Int

  host Host @relation(fields: [hostId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  bookings Booking[]
  reviews Review[]
  amenities Amenity[] @relation("PropertyAmenities")

  @@index([hostId])
}

model Review {
  id String @id @default(uuid())
  userId String 
  propertyId String
  rating Int
  comment String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  property Property @relation(fields: [propertyId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([userId])
  @@index([propertyId])
}

model User {
  id String @id @default(uuid())
  username String @unique
  password String
  name String
  email String
  phoneNumber String
  profilePicture String

  bookings Booking[]
  reviews Review[]

}


